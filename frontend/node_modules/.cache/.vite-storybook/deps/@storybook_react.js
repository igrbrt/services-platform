import {
  require_client
} from "./chunk-4FZ7IYNB.js";
import "./chunk-O3XJIMRA.js";
import {
  require_react
} from "./chunk-JLRUYTQW.js";
import {
  require_client_logger
} from "./chunk-NHRQ7YIR.js";
import {
  require_preview_api
} from "./chunk-SXFZQ2JR.js";
import {
  __toESM
} from "./chunk-DFKQJ226.js";

// ../node_modules/.pnpm/@storybook+global@5.0.0/node_modules/@storybook/global/dist/index.mjs
var scope = (() => {
  let win;
  if (typeof window !== "undefined") {
    win = window;
  } else if (typeof globalThis !== "undefined") {
    win = globalThis;
  } else if (typeof global !== "undefined") {
    win = global;
  } else if (typeof self !== "undefined") {
    win = self;
  } else {
    win = {};
  }
  return win;
})();

// ../node_modules/.pnpm/@storybook+react@7.0.20_react-dom@18.2.0_react@18.2.0_typescript@5.0.4/node_modules/@storybook/react/dist/chunk-JWY6Y6NU.mjs
var import_react2 = __toESM(require_react(), 1);

// ../node_modules/.pnpm/@storybook+react-dom-shim@7.0.20_react-dom@18.2.0_react@18.2.0/node_modules/@storybook/react-dom-shim/dist/react-18.mjs
var import_react = __toESM(require_react(), 1);
var import_client = __toESM(require_client(), 1);
var nodes = /* @__PURE__ */ new Map();
var WithCallback = ({ callback, children }) => {
  let once = (0, import_react.useRef)();
  return (0, import_react.useLayoutEffect)(() => {
    once.current !== callback && (once.current = callback, callback());
  }, [callback]), children;
};
var renderElement = async (node, el) => {
  let root = await getReactRoot(el);
  return new Promise((resolve) => {
    root.render(import_react.default.createElement(WithCallback, { callback: () => resolve(null) }, node));
  });
};
var unmountElement = (el, shouldUseNewRootApi) => {
  let root = nodes.get(el);
  root && (root.unmount(), nodes.delete(el));
};
var getReactRoot = async (el) => {
  let root = nodes.get(el);
  return root || (root = import_client.default.createRoot(el), nodes.set(el, root)), root;
};

// ../node_modules/.pnpm/@storybook+react@7.0.20_react-dom@18.2.0_react@18.2.0_typescript@5.0.4/node_modules/@storybook/react/dist/chunk-JWY6Y6NU.mjs
var { FRAMEWORK_OPTIONS } = scope;
var render = (args, context) => {
  let { id, component: Component2 } = context;
  if (!Component2)
    throw new Error(`Unable to render story ${id} as the component annotation is missing from the default export`);
  return import_react2.default.createElement(Component2, { ...args });
};
var ErrorBoundary = class extends import_react2.Component {
  constructor() {
    super(...arguments);
    this.state = { hasError: false };
  }
  static getDerivedStateFromError() {
    return { hasError: true };
  }
  componentDidMount() {
    let { hasError } = this.state, { showMain } = this.props;
    hasError || showMain();
  }
  componentDidCatch(err) {
    let { showException } = this.props;
    showException(err);
  }
  render() {
    let { hasError } = this.state, { children } = this.props;
    return hasError ? null : children;
  }
};
var Wrapper = (FRAMEWORK_OPTIONS == null ? void 0 : FRAMEWORK_OPTIONS.strictMode) ? import_react2.StrictMode : import_react2.Fragment;
async function renderToCanvas({ storyContext, unboundStoryFn, showMain, showException, forceRemount }, canvasElement) {
  let content = import_react2.default.createElement(ErrorBoundary, { showMain, showException }, import_react2.default.createElement(unboundStoryFn, { ...storyContext })), element = Wrapper ? import_react2.default.createElement(Wrapper, null, content) : content;
  return forceRemount && unmountElement(canvasElement), await renderElement(element, canvasElement), () => unmountElement(canvasElement);
}

// ../node_modules/.pnpm/@storybook+react@7.0.20_react-dom@18.2.0_react@18.2.0_typescript@5.0.4/node_modules/@storybook/react/dist/index.mjs
var import_preview_api = __toESM(require_preview_api(), 1);
var import_client_logger = __toESM(require_client_logger(), 1);
var { window: globalWindow } = scope;
globalWindow && (globalWindow.STORYBOOK_ENV = "react");
var RENDERER = "react";
var api = (0, import_preview_api.start)(renderToCanvas, { render });
var storiesOf = (kind, m) => api.clientApi.storiesOf(kind, m).addParameters({ renderer: RENDERER });
var configure = (...args) => api.configure(RENDERER, ...args);
var forceReRender = api.forceReRender;
var raw = api.clientApi.raw;
function setProjectAnnotations(projectAnnotations) {
  (0, import_preview_api.setProjectAnnotations)(projectAnnotations);
}
function setGlobalConfig(projectAnnotations) {
  (0, import_client_logger.deprecate)("setGlobalConfig is deprecated. Use setProjectAnnotations instead."), setProjectAnnotations(projectAnnotations);
}
var defaultProjectAnnotations = { render };
function composeStory(story, componentAnnotations, projectAnnotations, exportsName) {
  return (0, import_preview_api.composeStory)(story, componentAnnotations, projectAnnotations, defaultProjectAnnotations, exportsName);
}
function composeStories(csfExports, projectAnnotations) {
  return (0, import_preview_api.composeStories)(csfExports, projectAnnotations, composeStory);
}
var _a;
typeof module < "u" && ((_a = module == null ? void 0 : module.hot) == null ? void 0 : _a.decline());
export {
  composeStories,
  composeStory,
  configure,
  forceReRender,
  raw,
  setGlobalConfig,
  setProjectAnnotations,
  storiesOf
};
//# sourceMappingURL=@storybook_react.js.map
